plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco' // ✅ añadimos JaCoCo
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Sistema de gestión de alojamientos con reservas, usuarios y notificaciones - Hosped'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// --- Spring Boot ---
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// --- Lombok ---
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// --- MapStruct ---
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	// --- OpenAPI + Swagger ---
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	// --- Testing (JUnit 5 / Spring Boot Test) ---
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy tasks.jacocoTestReport // ✅ genera el reporte después de los tests
}

jacoco {
	toolVersion = "0.8.11" // ✅ versión estable de JaCoCo
}

tasks.jacocoTestReport {
	dependsOn tasks.test // ✅ se ejecuta después de los tests
	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir("reports/jacoco/html")
	}
}
